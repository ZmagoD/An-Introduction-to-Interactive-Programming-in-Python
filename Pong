# Implementation of classic arcade game Pong

import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 20
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True
ball_pos=[WIDTH / 2, HEIGHT / 2]
ball_vel=[0,0]
paddle1_pos=[0,160]
paddle2_pos=[600,160]
paddle1_vel=[0,0]
paddle2_vel=[0,0]
score1=0
score2=0




# initialize ball_pos and ball_vel for new bal in middle of table
# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos, ball_vel # these are vectors stored as lists
    x=random.randrange(120, 240)/60
    y=random.randrange(60, 180)/60
    if direction == RIGHT:
        ball_pos=[WIDTH / 2, HEIGHT / 2]
        ball_vel=[x,-y]
    elif direction == LEFT:
        ball_pos=[WIDTH / 2, HEIGHT / 2]
        ball_vel=[-x,-y]
# define event handlers
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
    global score1, score2  # these are ints
    score1=0
    score2=0
    paddle1_pos=[0,160]
    paddle2_pos=[600,160]
    spawn_ball(RIGHT)
def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos, ball_pos, ball_vel
    
        
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")
        
    # update ball
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    if ball_pos[1]<= BALL_RADIUS:
        ball_vel[1]=-ball_vel[1]
    elif ball_pos[1]>=(HEIGHT-BALL_RADIUS):
        ball_vel[1]=-ball_vel[1]
    
    # draw ball
    canvas.draw_circle(ball_pos,BALL_RADIUS,2,"White","White")

    if ball_pos[0]<=PAD_WIDTH+BALL_RADIUS:
        if paddle1_pos[0]+PAD_WIDTH<=ball_pos[0] and paddle1_pos[1]<ball_pos[1] and paddle1_pos[1]+PAD_HEIGHT>ball_pos[1]:
            ball_vel[0]=-ball_vel[0] 
            ball_vel[0]+=1
            ball_vel[1]-=1
        else:
            spawn_ball(RIGHT)
            score2+=1
            
    if ball_pos[0]>=(WIDTH-PAD_WIDTH-BALL_RADIUS):
        if paddle2_pos[0]-PAD_WIDTH>=ball_pos[0] and paddle2_pos[1]<ball_pos[1] and paddle2_pos[1]+PAD_HEIGHT>ball_pos[1]:
            ball_vel[0]=-ball_vel[0]
            ball_vel[0]-=1
            ball_vel[1]+=1
            
        else:
            spawn_ball(LEFT)
            score1+=1
    canvas.draw_text(str(score1),(225,100),60,"White")
    canvas.draw_text(str(score2),(350,100),60,"White")                 
    # update paddle's vertical position, keep paddle on the screen
    canvas.draw_line((paddle1_pos[0],paddle1_pos[1]),(paddle1_pos[0],paddle1_pos[1]+80),16,"White")
    canvas.draw_line((paddle2_pos[0],paddle2_pos[1]),(paddle2_pos[0],paddle2_pos[1]+80),16,"White")
    # draw paddles
    if paddle1_pos[1]>=HEIGHT-80 and paddle1_vel[1]>0:
        paddle1_vel[1]=0
    else:
        paddle1_pos[1]+=paddle1_vel[1]
        
    if paddle1_pos[1]<=0 and paddle1_vel[1]<0:
        paddle1_vel[1]=0
    else:
        paddle1_pos[1]+=paddle1_vel[1]
        
    if paddle2_pos[1]>=HEIGHT-80 and paddle2_vel[1]>0:
        paddle2_vel[1]=0
    else:
        paddle2_pos[1]+=paddle2_vel[1]
        
    if paddle2_pos[1]<=0 and paddle2_vel[1]<0:
        paddle2_vel[1]=0
    else:
        paddle2_pos[1]+=paddle2_vel[1]
    
    # draw scores
        
def keydown(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["down"]:
            paddle2_vel[1] += 4 
    elif key == simplegui.KEY_MAP["up"]:
            paddle2_vel[1] -= 4 
    elif key == simplegui.KEY_MAP["w"]:
            paddle1_vel[1] -= 4 
    elif key == simplegui.KEY_MAP["s"]:
            paddle1_vel[1] += 4 
def keyup(key):
    global paddle1_vel, paddle2_vel
    if key == simplegui.KEY_MAP["down"]:
        paddle2_vel[1] =0
    elif key == simplegui.KEY_MAP["up"]:
        paddle2_vel[1] =0 
    elif key == simplegui.KEY_MAP["w"]:
        paddle1_vel[1]=0
    elif key == simplegui.KEY_MAP["s"]:
        paddle1_vel[1]=0

def button_handler():
    new_game()
        
        
# create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
frame.add_button("Restart",button_handler,100)

# start frame
new_game()
frame.start()
